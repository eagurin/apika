[tool.poetry]
name = "apiki"
version = "0.1.0"
description = "API Knowledge Integration - Interact with APIs using LangChain agents"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
license = "MIT"
packages = [{include = "apiki"}]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

[tool.poetry.dependencies]
python = ">=3.10,<3.13"
langchain = "^0.3.20"
langchain-openai = "^0.3.8"
langchain-community = "^0.3.19"
langchain-core = "^0.3.45"
langsmith = "^0.3.15"
openai = "^1.0.0"
pydantic = "^2.5.3"
requests = "^2.31.0"
python-dotenv = "^1.0.0"
numpy = "^2.2.3"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
pytest-cov = "^6.0.0"
black = "^25.1.0"
isort = "^6.0.1"
flake8 = "^7.0.0"
mypy = "^1.8.0"
pre-commit = "^3.5.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 79
target-version = ["py310", "py311", "py312"]

[tool.isort]
profile = "black"
multi_line_output = 3
line-length = 79

[tool.mypy]
python_version = "3.10"
strict = true
ignore_missing_imports = true

[tool.poetry.scripts]
apiki = "apiki.cli:main" 